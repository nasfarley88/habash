#!/usr/bin/env bash

function habash_help {
    echo "Welcome to Habash!"
    echo ""
    echo "This is a very basic bash script to ease contacting Habitica on the command line. It is essentially a basic wrapper around curl, with some extra commands for ease of use."
    echo ""
    echo "Available commands:"
    echo "habash getidoftask TASK_TEXT"
    echo "habash up TASK_TEXT"
    echo "habash down TASK_TEXT"
    echo "habash deletetask TASK_TEXT"
    echo "habash createtodo TASK_TEXT"
    echo "habash createhabit TASK_TEXT"
    # echo "habash post API_PATH [CURL_ARGUMENTS]"
    # echo "habash get API_PATH [CURL_ARGUMENTS]"
}

# Basic commands
#
# These commands should be used to create more complex commands. They are left
# available to the user to do complex things with the api
function hcurl {
    # Basic curl wrapper for habitica
    local method=$1
    local url=$2
    shift;shift
    curl -s -X $method -H "x-api-key: $HABITICA_TOKEN" -H "x-api-user: $HABITICA_UUID" -H "Content-Type: application/json" https://habitica.com/api/v3/$url "$@"
}

function get {
    hcurl GET "$@"
}

function post {
    hcurl POST "$@"
}

function put {
    hcurl PUT "$@"
}

function del {
    hcurl DELETE "$@"
}

# End of basic commands

# Composite commands
#
# These commands are for convenience. They should use the basic commands above
# as much as possible.

function habash_getidoftask {
    # TODO get this to return just the id or a failed flag
    get tasks/user | grep -Po '"text":.*?"id":.*?,' | grep "$*" | grep -Po '"id":".*?"' | grep -Po '[-a-f0-9]{36}'
}

function habash_deletetask {
    del /tasks/$(habash_getidoftask $*)
}

function habash_up {
    post /tasks/$(habash_getidoftask $*)/score/up
}

function habash_down {
    post /tasks/$(habash_getidoftask $*)/score/down
}

function habash_createtodo {
    # curl -s -H "x-api-key: $HABITICA_TOKEN" -H "x-api-user: $HABITICA_UUID" -H "Content-Type: application/json" -X POST -d "{\"text\": \"$*\", \"type\": \"todo\"}" https://habitica.com/api/v3/tasks/user

    post /tasks/user -d "{\"text\": \"$*\", \"type\": \"todo\"}"
}

function habash_createhabit {
    # curl -s -H "x-api-key: $HABITICA_TOKEN" -H "x-api-user: $HABITICA_UUID" -H "Content-Type: application/json" -X POST -d "{\"text\": \"$*\", \"type\": \"habit\"}" https://habitica.com/api/v3/tasks/user
    post /tasks/user -d "{\"text\": \"$*\", \"type\": \"habit\"}"
}

function habash_cast {
    post /user/class/cast/$*
}

function habash_status {
    get /user |jq .data.stats
}

action=$1
shift
habash_${action} $@ 2>/dev/null ||echo "$action is not a valid action"
